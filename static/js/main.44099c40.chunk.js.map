{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","url","process","xhr","XMLHttpRequest","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","responseType","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","e","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","event","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","console","log","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","element","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.44099c40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n }\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if(data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const url = `${process.env.REACT_APP_SERVER_URL}${endpoint}` ;\r\n  const xhr = new XMLHttpRequest();\r\n  \r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url);\r\n  xhr.responseType = 'json';\r\n  xhr.setRequestHeader('Content-Type', 'application/json');\r\n  \r\n  if(csrftoken) {\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n  }\r\n   xhr.onload = () => {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail;\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf('login') === -1) {\r\n          window.location.href = '/login?showLoginRequired=true';\r\n        }\r\n      }\r\n    }\r\n     callback(xhr.response, xhr.status);\r\n   };\r\n   xhr.onerror = () => {\r\n     callback({'message': 'The request was an error'}, 400);\r\n   };\r\n   xhr.send(jsonData);\r\n}\r\n\r\n","import { backendLookup } from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n   backendLookup('POST', '/tweets/create/', callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n   backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n   let endpoint =  \"/tweets/\"\r\n   if (username){\r\n       endpoint =  `/tweets/?username=${username}`\r\n   }\r\n   if (nextUrl !== null && nextUrl !== undefined) {\r\n      endpoint = nextUrl.replace(process.env.REACT_APP_SERVER_URL, \"\")\r\n  }\r\n   backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n   const data = { id: tweetId, action: action }\r\n   backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n   let endpoint =  '/tweets/feed/';\r\n   if (nextUrl !== null && nextUrl !== undefined) {\r\n      endpoint = nextUrl.replace(process.env.REACT_APP_SERVER_URL, '');\r\n   }\r\n   backendLookup('GET', endpoint, callback);\r\n}","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n   const {tweet, action, didPerformAction} = props;\r\n   const likes = tweet.likes ? tweet.likes : 0;\r\n   const className = props.className ? props.className : 'btn btn-primary btn-sm';\r\n   const actionDisplay = action.display ? action.display : 'Action';\r\n\r\n   const handleActionBackendEvent = (response, status) =>{\r\n      if ((status === 200 || status === 201) && didPerformAction){\r\n         didPerformAction(response, status);\r\n      }\r\n    }\r\n\r\n   const handleClick = (e) => {\r\n      e.preventDefault();\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n   }\r\n\r\n   const display = action.type === 'like' ? `${likes} ${action.display}` : actionDisplay\r\n   return <button onClick={handleClick} className={className}> {display} </button>\r\n }","import React from 'react'\r\n\r\nexport function UserLink (props) {\r\n   const {username} = props\r\n   const handleUserLink = (e) => {\r\n      window.location.href= `/profiles/${username}`\r\n   }\r\n\r\n   return <span className='pointer' onClick={handleUserLink}>\r\n      {props.children}\r\n   </span>\r\n}\r\n\r\nexport  function UserDisplay(props){\r\n   const { user, includeFullName, hideLink } = props;\r\n   const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\r\n   return <React.Fragment>\r\n      {nameDisplay}\r\n      { hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink> }\r\n   </React.Fragment>\r\n}\r\n\r\nexport  function UserPicture (props) {\r\n   const {user, hideLink} = props;\r\n   const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n      {user.username[0]}\r\n   </span>\r\n   return  hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\r\n}","import React from 'react'\r\nimport numeral from 'numeral'\r\n\r\nexport function DisplayCount(props) {\r\n   return <span className={ props.className }>{ numeral(props.children).format(\"0a\") }</span>\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { UserDisplay, UserPicture } from './components'\r\nimport { apiProfileDetail, apiProfileFollowToggle } from './lookup'\r\n\r\nimport { DisplayCount } from './utils'\r\n\r\nfunction ProfileBadge(props) {\r\n   const { user, didFollowToggle, profileLoading } = props;\r\n   let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\";\r\n   currentVerb = profileLoading ? \"Loading...\" : currentVerb;\r\n\r\n   const handleFollowToggle = (event) => {\r\n      event.preventDefault();\r\n      if (didFollowToggle && !profileLoading) {\r\n         didFollowToggle(currentVerb);\r\n      }\r\n   }\r\n   return user ? <div>\r\n      <UserPicture user={user} hideLink />\r\n      <p><UserDisplay user={user} includeFullName hideLink /></p>\r\n      <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"} </p>\r\n      <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n      <p>{user.location}</p>\r\n      <p>{user.bio}</p>\r\n      <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n   </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent (props) {\r\n   const { username } = props;\r\n\r\n   const [didLookup, setDidLookup] = useState(false);\r\n   const [profile, setProfile] = useState(null);\r\n   const [profileLoading, setProfileLoading] = useState(false);\r\n\r\n   const handleBackendLookup = (response, status) => {\r\n      if (status === 200) {\r\n         setProfile(response);\r\n      }\r\n   }\r\n\r\n   useEffect(()=>{\r\n      if (didLookup === false){\r\n         apiProfileDetail(username, handleBackendLookup);\r\n         setDidLookup(true);\r\n      }\r\n   }, [username, didLookup, setDidLookup]);\r\n\r\n   const handleNewFollow = (actionVerb) => {\r\n      apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n          if (status === 200) {\r\n              setProfile(response);\r\n          }\r\n          setProfileLoading(false);\r\n      })\r\n      setProfileLoading(true)\r\n   }\r\n   return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null;\r\n} ","import { backendLookup } from '../lookup';\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n   backendLookup(\"GET\", `/profiles/${username}/`, callback);\r\n} \r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n   const data = { action: `${action && action}`.toLowerCase() };\r\n   backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data);\r\n} ","import React, {useState}  from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\nimport { UserDisplay, UserPicture } from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n}\r\n  \r\nexport function Tweet(props) {\r\n   const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n   const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n   let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n   className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n   const path = window.location.pathname\r\n   const match = path.match(/(?<tweetid>\\d+)/)\r\n   const urlTweetId = match ? match.groups.tweetid : -1\r\n   const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n      \r\n   const handleLink = (e) => {\r\n      e.preventDefault()\r\n      window.location.href = `/${tweet.id}`\r\n   }\r\n\r\n   const handlePerformAction = (newActionTweet, status) => {\r\n      if (status === 200){\r\n         setActionTweet(newActionTweet)\r\n      } else if (status === 201) {\r\n         if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n         }\r\n      }\r\n   }\r\n      \r\n   return (\r\n      <div className={className}>\r\n         {isRetweet === true && <div className='mb-2'>\r\n            <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n         </div>}\r\n         <div className='d-flex'>\r\n            <div className=''>\r\n               <UserPicture user={tweet.user} />\r\n            </div>\r\n            <div className='col-11'>\r\n               <div>\r\n                  <p>\r\n                     <UserDisplay includeFullName user={tweet.user} />\r\n                  </p>\r\n                  <p>{tweet.content}</p>\r\n                  <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n               </div>\r\n               <div className='btn btn-group px-0'>\r\n                  {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                     <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                     <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                     <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                  </React.Fragment>}\r\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { apiTweetList } from './lookup';\r\nimport { Tweet } from './detail'\r\n\r\n\r\nexport function TweetsList(props) {\r\n   const [tweetsInit, setTweetsInit] = useState([]);\r\n   const [tweets, setTweets] = useState([]);\r\n   const [nextUrl, setNextUrl] = useState(null)\r\n   const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n   useEffect(() => {\r\n      const final = [...props.newTweets].concat(tweetsInit);\r\n      if(final.length !== tweets.length) {\r\n         setTweets(final);\r\n      }\r\n   }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n   useEffect(() => {\r\n      if(tweetsDidSet === false) {\r\n         const handleTweetListLookup = (response, status) => {\r\n           if(status === 200) {\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n             setTweetsDidSet(true);\r\n           }else {\r\n             alert('There was an error.');\r\n           }\r\n         };\r\n         apiTweetList(props.username, handleTweetListLookup);\r\n      }\r\n   }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n   const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          \r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error.\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n \r\n   return <React.Fragment>{tweets.map((item, index) => {\r\n     return <Tweet tweet={item} key={`${index}-{item.id}`} className='my-5 py-5 border bg-white text-dark' didRetweet={handleDidRetweet}/>\r\n    })}\r\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n }","import React from 'react'\r\n\r\nimport { apiTweetCreate } from './lookup';\r\n\r\nexport function TweetCreate(props) {\r\n   const textAreaRef = React.createRef()\r\n   const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n      if (status === 201){\r\n        didTweet(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      apiTweetCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'></textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n        </form>\r\n  </div>\r\n}","import React, {useEffect, useState}  from 'react';\r\nimport {apiTweetFeed} from './lookup';\r\nimport {Tweet} from './detail';\r\n\r\nexport function FeedList(props) {\r\n   const [tweetsInit, setTweetsInit] = useState([]);\r\n   const [tweets, setTweets] = useState([]);\r\n   const [nextUrl, setNextUrl] = useState(null);\r\n   const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n   useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit);\r\n      if (final.length !== tweets.length) {\r\n         setTweets(final);\r\n      }\r\n   }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n   useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n         const handleTweetListLookup = (response, status) => {\r\n\r\n            if (status === 200){\r\n               setNextUrl(response.next);\r\n               setTweetsInit(response.results);\r\n               setTweetsDidSet(true);\r\n            }\r\n         }\r\n         apiTweetFeed(handleTweetListLookup);\r\n      }\r\n   }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n   const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit];\r\n      updateTweetsInit.unshift(newTweet);\r\n      setTweetsInit(updateTweetsInit);\r\n      const updateFinalTweets = [...tweets];\r\n      updateFinalTweets.unshift(tweets);\r\n      setTweets(updateFinalTweets);\r\n   }\r\n\r\n   const handleLoadNext = (event) => {\r\n      event.preventDefault();\r\n\r\n      if (nextUrl !== null) {\r\n         const handleLoadNextResponse = (response, status) =>{\r\n            if (status === 200){\r\n               setNextUrl(response.next);\r\n               const newTweets = [...tweets].concat(response.results);\r\n               setTweetsInit(newTweets);\r\n               setTweets(newTweets);\r\n            }\r\n         }\r\n         apiTweetFeed(handleLoadNextResponse, nextUrl);\r\n      }\r\n   }\r\n\r\n   return <React.Fragment> {tweets.map((item, index) => {\r\n      return <Tweet  \r\n         tweet={item} \r\n         didRetweet={handleDidRetweet}\r\n         className='my-5 py-5 border bg-white text-dark' \r\n         key={`${index}-{item.id}`} \r\n      />\r\n   })}\r\n   {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n   </React.Fragment>\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { TweetsList } from './list';\r\nimport { TweetCreate } from './create';\r\nimport {Tweet} from './detail';\r\nimport {apiTweetDetail} from './lookup';\r\nimport { FeedList } from './feed';\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  }\r\n  return <div className={props.className}>\r\n    {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n    <FeedList newTweets={newTweets} {...props} />\r\n  </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n   const [newTweets, setNewTweets] = useState([]);\r\n   const canTweet = props.canTweet === \"false\" ? false : true;\r\n\r\n   const handleNewTweet = (newTweet) => {\r\n      let tempNewTweets = [...newTweets];\r\n      tempNewTweets.unshift(newTweet);\r\n      setNewTweets(tempNewTweets);\r\n   };\r\n\r\n   return (\r\n      <div className={props.className}>\r\n         {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n         <TweetsList newTweets={newTweets} {...props}/>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n   const {tweetId} = props;\r\n   const [didLookup, setDidLookup] = useState(false);\r\n   const [tweet, setTweet] = useState(null);\r\n \r\n   const handleBackendLookup = (response, status) => {\r\n     if (status === 200) {\r\n       setTweet(response);\r\n     } else {\r\n       alert(\"There was an error finding your tweet.\");\r\n     }\r\n   }\r\n   useEffect(()=>{\r\n     if (didLookup === false){\r\n \r\n       apiTweetDetail(tweetId, handleBackendLookup);\r\n       setDidLookup(true);\r\n     }\r\n   }, [tweetId, didLookup, setDidLookup]);\r\n \r\n   return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n  } \r\n","import React from 'react';\nimport logo from './logo.svg';\n\nimport { TweetsComponent } from './tweets'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { TweetsComponent, TweetDetailComponent, FeedComponent } from './tweets'\nimport { ProfileBadgeComponent } from './profiles'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root');\nif(appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst element = React.createElement;\nconst tweetsEl = document.getElementById('twittexample');\nif(tweetsEl) {\n  ReactDOM.render(element(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById('twittexample-feed');\nif (tweetFeedEl) {\n  ReactDOM.render(\n    element(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll('.twittexample-detail');\n\ntweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n      element(TweetDetailComponent, container.dataset), \n        container);\n});\n\nconst userProfileBadgeElements = document.querySelectorAll(\".twittexample-profile-badge\")\n\nuserProfileBadgeElements.forEach(container=> {\n  ReactDOM.render(\n    element(ProfileBadgeComponent, container.dataset), container);\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}